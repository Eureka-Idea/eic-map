{"version":3,"sources":["MapChart.js","index.js"],"names":["modeData","consultants","headerText","colors","primary","secondary","outline","projects","PIN_COLORS","_","uniq","getTransform","rotation","extent","transX","transY","Math","abs","PIN_HEIGHT","concat","MapChart","_ref","members","setTooltipContent","console","log","_React$useState","React","useState","_React$useState2","Object","slicedToArray","poppedUp","setPoppedUp","_React$useState3","_React$useState4","mode","_modeData$mode","Markers","useMemo","filter","m","latitude","longitude","sort","m1","m2","map","i","name","_m$col_rotation","col_rotation","react_default","a","createElement","index_umd","key","coordinates","onClick","bind","onMouseEnter","e","onMouseLeave","version","xmlns","preserveAspectRatio","viewBox","width","height","transform","d","className","stroke","strokeOpacity","fill","fillOpacity","strokeWidth","data-tip","zoom","geography","_ref2","geographies","geo","rsmKey","target","setAttribute","properties","NAME","color","style","backgroundColor","display","regexpNickname","App","_useState","_useState2","setMembers","useEffect","fetch","then","response","json","data","records","r","memObj","id","keys","fields","forEach","field","val","nicknameMatch","match","nickname","standardizedField","toLowerCase","replaceAll","_useState3","_useState4","tooltipContent","index_es","src_MapChart","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.015e36c7.chunk.js","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker,\n} from \"react-simple-maps\";\nimport _ from \"lodash\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst modeData = {\n  consultants: {\n    headerText: \"EIC Consultants\",\n    colors: {\n      primary: \"#1b63c188\",\n      secondary: \"#5a87c144\",\n      outline: \"#00000016\",\n      // primary: \"#1b63c1e3\",\n      // secondary: \"#5a87c126\",\n    },\n  },\n  projects: {\n    headerText: \"EIC Projects\",\n    colors: {\n      primary: \"#149E6Ae3\",\n      secondary: \"#58998026\",\n      outline: \"#00000016\",\n    },\n  },\n};\n\nconst PIN_COLORS = _.uniq([\n  \"#63b598\",\n  \"#ce7d78\",\n  \"#ea9e70\",\n  \"#a48a9e\",\n  \"#c6e1e8\",\n  \"#648177\",\n  \"#0d5ac1\",\n  \"#f205e6\",\n  \"#1c0365\",\n  \"#14a9ad\",\n  \"#4ca2f9\",\n  \"#a4e43f\",\n  \"#d298e2\",\n  \"#6119d0\",\n  \"#d2737d\",\n  \"#c0a43c\",\n  \"#f2510e\",\n  \"#651be6\",\n  \"#79806e\",\n  \"#61da5e\",\n  \"#cd2f00\",\n  \"#9348af\",\n  \"#01ac53\",\n  \"#c5a4fb\",\n  \"#996635\",\n  \"#b11573\",\n  \"#4bb473\",\n  \"#75d89e\",\n  \"#2f3f94\",\n  \"#2f7b99\",\n  \"#da967d\",\n  \"#34891f\",\n  \"#b0d87b\",\n  \"#ca4751\",\n  \"#7e50a8\",\n  \"#c4d647\",\n  \"#e0eeb8\",\n  \"#11dec1\",\n  \"#289812\",\n  \"#566ca0\",\n  \"#ffdbe1\",\n  \"#2f1179\",\n  \"#935b6d\",\n  \"#916988\",\n  \"#513d98\",\n  \"#aead3a\",\n  \"#9e6d71\",\n  \"#4b5bdc\",\n  \"#0cd36d\",\n  \"#250662\",\n  \"#cb5bea\",\n  \"#228916\",\n  \"#ac3e1b\",\n  \"#df514a\",\n  \"#539397\",\n  \"#880977\",\n  \"#f697c1\",\n  \"#ba96ce\",\n  \"#679c9d\",\n  \"#c6c42c\",\n  \"#5d2c52\",\n  \"#48b41b\",\n  \"#e1cf3b\",\n  \"#5be4f0\",\n  \"#57c4d8\",\n  \"#a4d17a\",\n  \"#225b8\",\n  \"#be608b\",\n  \"#96b00c\",\n  \"#088baf\",\n  \"#f158bf\",\n  \"#e145ba\",\n  \"#ee91e3\",\n  \"#05d371\",\n  \"#5426e0\",\n  \"#4834d0\",\n  \"#802234\",\n  \"#6749e8\",\n  \"#0971f0\",\n  \"#8fb413\",\n  \"#b2b4f0\",\n  \"#c3c89d\",\n  \"#c9a941\",\n  \"#41d158\",\n  \"#fb21a3\",\n  \"#51aed9\",\n  \"#5bb32d\",\n  \"#807fb\",\n  \"#21538e\",\n  \"#89d534\",\n  \"#d36647\",\n  \"#7fb411\",\n  \"#0023b8\",\n  \"#3b8c2a\",\n  \"#986b53\",\n  \"#f50422\",\n  \"#983f7a\",\n  \"#ea24a3\",\n  \"#79352c\",\n  \"#521250\",\n  \"#c79ed2\",\n  \"#d6dd92\",\n  \"#e33e52\",\n  \"#b2be57\",\n  \"#fa06ec\",\n  \"#1bb699\",\n  \"#6b2e5f\",\n  \"#64820f\",\n  \"#21538e\",\n  \"#89d534\",\n  \"#d36647\",\n  \"#7fb411\",\n  \"#0023b8\",\n  \"#3b8c2a\",\n  \"#986b53\",\n  \"#f50422\",\n  \"#983f7a\",\n  \"#ea24a3\",\n  \"#79352c\",\n  \"#521250\",\n  \"#c79ed2\",\n  \"#d6dd92\",\n  \"#e33e52\",\n  \"#b2be57\",\n  \"#fa06ec\",\n  \"#1bb699\",\n  \"#6b2e5f\",\n  \"#64820f\",\n  \"#1c271\",\n  \"#9cb64a\",\n  \"#996c48\",\n  \"#9ab9b7\",\n  \"#06e052\",\n  \"#e3a481\",\n  \"#0eb621\",\n  \"#fc458e\",\n  \"#b2db15\",\n  \"#aa226d\",\n  \"#792ed8\",\n  \"#73872a\",\n  \"#520d3a\",\n  \"#cefcb8\",\n  \"#a5b3d9\",\n  \"#7d1d85\",\n  \"#c4fd57\",\n  \"#f1ae16\",\n  \"#8fe22a\",\n  \"#ef6e3c\",\n  \"#243eeb\",\n  \"#1dc18\",\n  \"#dd93fd\",\n  \"#3f8473\",\n  \"#e7dbce\",\n  \"#421f79\",\n  \"#7a3d93\",\n  \"#635f6d\",\n  \"#93f2d7\",\n  \"#9b5c2a\",\n  \"#15b9ee\",\n  \"#0f5997\",\n  \"#409188\",\n  \"#911e20\",\n  \"#1350ce\",\n  \"#10e5b1\",\n  \"#fff4d7\",\n  \"#cb2582\",\n  \"#ce00be\",\n  \"#32d5d6\",\n  \"#17232\",\n  \"#608572\",\n  \"#c79bc2\",\n  \"#00f87c\",\n  \"#77772a\",\n  \"#6995ba\",\n  \"#fc6b57\",\n  \"#f07815\",\n  \"#8fd883\",\n  \"#060e27\",\n  \"#96e591\",\n  \"#21d52e\",\n  \"#d00043\",\n  \"#b47162\",\n  \"#1ec227\",\n  \"#4f0f6f\",\n  \"#1d1d58\",\n  \"#947002\",\n  \"#bde052\",\n  \"#e08c56\",\n  \"#28fcfd\",\n  \"#bb09b\",\n  \"#36486a\",\n  \"#d02e29\",\n  \"#1ae6db\",\n  \"#3e464c\",\n  \"#a84a8f\",\n  \"#911e7e\",\n  \"#3f16d9\",\n  \"#0f525f\",\n  \"#ac7c0a\",\n  \"#b4c086\",\n  \"#c9d730\",\n  \"#30cc49\",\n  \"#3d6751\",\n  \"#fb4c03\",\n  \"#640fc1\",\n  \"#62c03e\",\n  \"#d3493a\",\n  \"#88aa0b\",\n  \"#406df9\",\n  \"#615af0\",\n  \"#4be47\",\n  \"#2a3434\",\n  \"#4a543f\",\n  \"#79bca0\",\n  \"#a8b8d4\",\n  \"#00efd4\",\n  \"#7ad236\",\n  \"#7260d8\",\n  \"#1deaa7\",\n  \"#06f43a\",\n  \"#823c59\",\n  \"#e3d94c\",\n  \"#dc1c06\",\n  \"#f53b2a\",\n  \"#b46238\",\n  \"#2dfff6\",\n  \"#a82b89\",\n  \"#1a8011\",\n  \"#436a9f\",\n  \"#1a806a\",\n  \"#4cf09d\",\n  \"#c188a2\",\n  \"#67eb4b\",\n  \"#b308d3\",\n  \"#fc7e41\",\n  \"#af3101\",\n  \"#ff065\",\n  \"#71b1f4\",\n  \"#a2f8a5\",\n  \"#e23dd0\",\n  \"#d3486d\",\n  \"#00f7f9\",\n  \"#474893\",\n  \"#3cec35\",\n  \"#1c65cb\",\n  \"#5d1d0c\",\n  \"#2d7d2a\",\n  \"#ff3420\",\n  \"#5cdd87\",\n  \"#a259a4\",\n  \"#e4ac44\",\n  \"#1bede6\",\n  \"#8798a4\",\n  \"#d7790f\",\n  \"#b2c24f\",\n  \"#de73c2\",\n  \"#d70a9c\",\n  \"#25b67\",\n  \"#88e9b8\",\n  \"#c2b0e2\",\n  \"#86e98f\",\n  \"#ae90e2\",\n  \"#1a806b\",\n  \"#436a9e\",\n  \"#0ec0ff\",\n  \"#f812b3\",\n  \"#b17fc9\",\n  \"#8d6c2f\",\n  \"#d3277a\",\n  \"#2ca1ae\",\n  \"#9685eb\",\n  \"#8a96c6\",\n  \"#dba2e6\",\n  \"#76fc1b\",\n  \"#608fa4\",\n  \"#20f6ba\",\n  \"#07d7f6\",\n  \"#dce77a\",\n  \"#77ecca\",\n]);\n\nconst PIN_FILL_OPACITY = 1;\nconst PIN_STROKE_OPACITY = 0.3;\nconst PIN_WIDTH = 10;\nconst PIN_HEIGHT = 22;\n// degrees per notch\nconst ROTATION_MAGNITUDE = 15;\n// to calc X offset as a result of rotation\nconst ROTATION_X_CONSTANT = 2.8;\n// to calc Y offset as a result of rotation\nconst ROTATION_Y_CONSTANT = 0.7;\n\nconst getTransform = (rotation) => {\n  const extent = rotation / 180;\n  const transX = 0 + extent * PIN_HEIGHT * ROTATION_X_CONSTANT;\n  const transY =\n    Math.abs(extent * PIN_HEIGHT * ROTATION_Y_CONSTANT) - PIN_HEIGHT * 0.94;\n\n  const trans = `translate(${transX}, ${transY}) rotate(${rotation})`;\n  // console.log(trans);\n  return trans;\n};\n\nconst MapChart = ({ members, setTooltipContent }) => {\n  console.log(\"members: \", members);\n  const [poppedUp, setPoppedUp] = React.useState(null);\n  const [mode, setMode] = React.useState(\"consultants\");\n  const toggleMode = (e) => {\n    setMode(e.target.checked ? \"projects\" : \"consultants\");\n  };\n\n  const { headerText, colors } = modeData[mode];\n\n  const Markers = useMemo(\n    () => members\n      .filter((m) => m.latitude && m.longitude)\n      .sort((m1, m2) => m2.latitude - m1.latitude) // so shafts appear under heads\n      .map((m, i) => {\n        const { name, latitude, longitude, col_rotation = 0 } = m;\n        if (!i) console.log(\"RUNNING MEMOIZED MEMBER CREATION\")\n        return (\n          <Marker\n            key={name}\n            coordinates={[longitude, latitude]}\n            onClick={setPoppedUp.bind(this, { name })}\n            onMouseEnter={(e) => {\n              // e.target.parentElement.firstChild.setAttribute(\"fill-opacity\", 1);\n              // e.target.parentElement.firstChild.setAttribute(\"stroke-opacity\", 1);\n              setTooltipContent(name);\n            }}\n            onMouseLeave={(e) => {\n              // e.target.parentElement.firstChild.setAttribute(\"fill-opacity\", PIN_FILL_OPACITY);\n              // e.target.parentElement.firstChild.setAttribute(\"stroke-opacity\", PIN_STROKE_OPACITY);\n              setTooltipContent(\"\");\n            }}\n          >\n            <svg\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"xMidYMid meet\"\n              viewBox=\"114.64145469651561 105.6206896551725 34.3723384069327 71.72390017464997\"\n              width={PIN_WIDTH}\n              height={PIN_HEIGHT}\n              // width=\"30.37\"\n              // height=\"67.72\"\n              transform={getTransform(col_rotation * ROTATION_MAGNITUDE)}\n            >\n              <path\n                d=\"M146.01 120.22C146.01 127.73 139.92 133.82 132.41 133.82C124.91 133.82 118.81 127.73 118.81 120.22C118.81 112.71 124.91 106.62 132.41 106.62C139.92 106.62 146.01 112.71 146.01 120.22Z\"\n                className=\"pin-head\"\n                stroke=\"#000000\"\n                strokeOpacity={PIN_STROKE_OPACITY}\n                fill={PIN_COLORS[i]}\n                fillOpacity={PIN_FILL_OPACITY}\n              ></path>\n              <path\n                d=\"M128.55 133.63L115.64 174.34\"\n                className=\"pin-shaft\"\n                stroke=\"#000000\"\n                strokeWidth=\"1\"\n                strokeOpacity=\".6\"\n              ></path>\n            </svg>\n            {/* <text\n            textAnchor=\"middle\"\n            y={markerOffset}\n            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n          >\n            {name}\n          </text> */}\n          </Marker>\n        );\n    }),\n    [members, setTooltipContent]\n  ) \n\n  return (\n    <div>\n      {/* <h2>\n        {headerText}\n        <br />\n        <label className=\"switch\">\n          <input onChange={toggleMode} type=\"checkbox\" />\n          <span className=\"slider round\"></span>\n        </label>\n      </h2> */}\n      {poppedUp && (\n        <div className=\"popup\">\n          <span onClick={setPoppedUp.bind(this, null)} className=\"close\">\n            ✕\n          </span>\n          Information about {poppedUp.name}\n        </div>\n      )}\n      <ComposableMap data-tip=\"\">\n        <ZoomableGroup zoom={1}>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  fill={colors.secondary}\n                  stroke={colors.outline}\n                  strokeWidth=\"1\"\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={(e) => {\n                    e.target.setAttribute(\"fill\", colors.primary);\n                    // e.target.setAttribute(\"fill\", \"#5a87c1\");\n                    // console.log(\"E: \", e);\n                    // console.log(\"GEO: \", geo);\n                    setTooltipContent(geo.properties.NAME);\n                  }}\n                  onMouseLeave={(e) => {\n                    e.target.setAttribute(\"fill\", colors.secondary);\n                    // e.target.setAttribute(\"fill\", \"#5a87c1\");\n                    // console.log(\"E: \", e);\n                    // console.log(\"GEO: \", geo);\n                    setTooltipContent(\"\");\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n          {Markers}\n        </ZoomableGroup>\n      </ComposableMap>\n      <div>\n        {PIN_COLORS.map((color) => {\n          const style = {\n            backgroundColor: color + \"88\",\n            width: 200,\n            height: 30,\n            display: \"inline-block\",\n          };\n          return (\n            <span key={color} style={style}>\n              {color}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MapChart;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\n\n// format of col nicknames\nconst regexpNickname = /(col_\\w+)/;\n\nfunction App() {\n  const [members, setMembers] = useState([]);;\n  useEffect(() => {\n    fetch(\n      // read-only key\n      \"https://api.airtable.com/v0/appElHJfSTDnbbrr7/Gallery?api_key=keyFRBqnIvAd1gkXG\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const members = data.records.map((r) => {\n          const memObj = { id: r.id };\n\n          Object.keys(r.fields).forEach((field) => {\n            const val = r.fields[field];\n            const nicknameMatch = field.match(regexpNickname);\n\n            if (nicknameMatch && nicknameMatch[0]) {\n              const nickname = nicknameMatch[0];\n              memObj[nickname] = val;\n            } else {\n              const standardizedField = field\n                .toLowerCase()\n                .replaceAll(\" \", \"_\");\n              memObj[standardizedField] = val;\n            }\n          });\n\n          return memObj;\n        });\n\n        setMembers(members);\n        console.log(\"RUNNING MEMBER READ\");\n      });\n  }, []);;\n\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n\n  return (\n    <div>\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n      <MapChart members={members} setTooltipContent={setTooltipContent} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}